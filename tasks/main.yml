---
- name: Remove legacy key
  when:
    - mariadb_installation == 'native'
  ansible.builtin.apt_key:
    id: 177F4010FE56CA3336300305F1656F24C74CD1D8
    state: absent
  tags:
    - mariadb

- name: Remove legacy repo
  when:
    - mariadb_installation == 'native'
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ mariadb_upstream_arch }}] {{ mariadb_upstream_mirror }}/{{ mariadb_upstream_version }}/ubuntu {{ ansible_distribution_release }} main"
    filename: mariadb
    update_cache: False
    state: absent
  tags:
    - mariadb

- name: Download repo key
  when:
    - mariadb_installation == 'native'
  ansible.builtin.shell:
    cmd: "curl -sSL 'https://mariadb.org/mariadb_release_signing_key.asc' | gpg --dearmor --output {{ mariadb_keyring }}"
    creates: "{{ mariadb_keyring }}"
  tags:
    - mariadb

- name: Add apt repository
  when:
    - mariadb_installation == 'native'
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ mariadb_upstream_arch }} signed-by={{ mariadb_keyring }}] {{ mariadb_upstream_mirror }}/{{ mariadb_upstream_version }}/ubuntu {{ ansible_distribution_release }} main"
    filename: mariadb
    update_cache: True
    state: present
  tags:
    - mariadb

- name: Create required dirs
  loop: "{{ mariadb_default_folders + mariadb_extra_folders }}"
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    state: directory
  tags:
    - mariadb

- name: Install required packages
  when:
    - mariadb_installation == 'native'
  loop: "{{ mariadb_packages }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - mariadb

- name: Create temp directory
  when:
    - mariadb_installation == 'native'
    - mariadb_temp_directory | default(False)
  ansible.builtin.file:
    path: "{{ mariadb_temp_directory }}"
    owner: root
    group: root
    mode: u=rwx,g=rwx,o=rwx
    state: directory
  tags:
    - mariadb

- name: Fix data permissions
  when:
    - not ansible_check_mode
  ansible.builtin.file:
    path: /var/lib/mysql
    owner: "{{ 'mysql' if mariadb_installation == 'native' else '999' }}"
    group: "{{ 'mysql' if mariadb_installation == 'native' else '999' }}"
    mode: u=rwx,g=rx,o=rx
    state: directory
  tags:
    - mariadb

- name: Write extra configs
  loop: "{{ mariadb_extra_configs }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default("present") == "present"
  notify:
    - Restart mariadb
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "/etc/mysql/mariadb.conf.d/{{ item.priority | default('99') }}-{{ item.name }}.cnf"
    owner: root
    group: root
    mode: o=rw,g=r,o=r
  tags:
    - mariadb

- name: Delete extra configs
  loop: "{{ mariadb_extra_configs }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default("present") == "absent"
  notify:
    - Restart mariadb
  ansible.builtin.file:
    path: "/etc/mysql/mariadb.conf.d/{{ item.priority | default('99') }}-{{ item.name }}.cnf"
    state: absent
  tags:
    - mariadb

- name: Write galera config
  when:
    - mariadb_installation == 'native'
    - mariadb_galera_enabled
  notify:
    - Restart mariadb
  ansible.builtin.template:
    src: galera.j2
    dest: /etc/mysql/mariadb.conf.d/60-galera.cnf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - mariadb

- name: Write override config
  when:
    - mariadb_installation == 'native'
  notify:
    - Restart mariadb
  ansible.builtin.template:
    src: config.j2
    dest: /etc/mysql/mariadb.conf.d/99-override.cnf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - mariadb

- name: Write service override
  when:
    - mariadb_installation == 'native'
  notify:
    - Restart mariadb
  ansible.builtin.template:
    src: override.j2
    dest: /etc/systemd/system/mariadb.service.d/override.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - mariadb

- name: Write default config
  when:
    - mariadb_installation == 'docker'
  notify:
    - Restart mariadb
  ansible.builtin.template:
    src: default.j2
    dest: /etc/default/mariadb
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - mariadb

- name: Write service file
  when:
    - mariadb_installation == 'docker'
  notify:
    - Restart mariadb
  ansible.builtin.template:
    src: service.j2
    dest: /etc/systemd/system/mariadb.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - mariadb

- name: Pull docker image
  when:
    - mariadb_installation == 'docker'
    - mariadb_pull_image
  community.docker.docker_image:
    name: "{{ mariadb_image }}"
    source: pull
  tags:
    - mariadb

- name: Create docker network
  when:
    - mariadb_installation == 'docker'
    - mariadb_network | default(False)
  community.docker.docker_network:
    name: '{{ mariadb_network }}'
  tags:
    - mariadb

- name: Start mariadb service
  ignore_errors: "{{ ansible_check_mode }}"
  ansible.builtin.systemd:
    name: mariadb
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - mariadb

- name: Update root account
  when:
    - mariadb_installation == 'native'
    - not ansible_check_mode
  diff: False
  loop: "{{ mariadb_root_hosts }}"
  community.mysql.mysql_user:
    name: "{{ mariadb_root_username }}"
    password: "{{ mariadb_root_password }}"
    host: "{{ item }}"
    check_implicit_admin: True
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: "{{ mariadb_root_username }}"
    login_password: "{{ mariadb_root_password }}"
    priv: '*.*:ALL,GRANT'
    state: present
  tags:
    - mariadb

- name: Write debian config
  when:
    - mariadb_installation == 'native'
  ansible.builtin.template:
    src: debian.j2
    dest: /etc/mysql/debian.cnf
    owner: root
    group: root
    mode: u=rw,g=,o=
  tags:
    - mariadb

- name: Write auth config
  when:
    - mariadb_installation == 'native'
  ansible.builtin.template:
    src: auth.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: u=rw,g=,o=
  tags:
    - mariadb

- name: Remove anonymous user
  when:
    - mariadb_installation == 'native'
    - not ansible_check_mode
  diff: False
  community.mysql.mysql_user:
    name: ""
    host_all: True
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags:
    - mariadb

- name: Remove test database
  when:
    - mariadb_installation == 'native'
    - not ansible_check_mode
  community.mysql.mysql_db:
    name: test
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags:
    - mariadb

- name: Include galera tasks
  when:
    - mariadb_installation == 'native'
    - mariadb_galera_enabled | default(False)
  ansible.builtin.include_tasks: galera.yml
  tags:
    - mariadb

- name: Create defined databases
  delegate_to: "{{ mariadb_galera_primary if mariadb_galera_enabled else inventory_hostname }}"
  when:
    - mariadb_installation == 'native'
    - not ansible_check_mode
  loop: "{{ mariadb_global_databases + mariadb_extra_databases }}"
  loop_control:
    label: "{{ item.name }}"
  community.mysql.mysql_db:
    name: "{{ item.name }}"
    collation: "{{ item.collation | default(omit) }}"
    encoding: "{{ item.encoding | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags:
    - mariadb

- name: Create defined users
  delegate_to: "{{ mariadb_galera_primary if mariadb_galera_enabled else inventory_hostname }}"
  when:
    - mariadb_installation == 'native'
    - not ansible_check_mode
  diff: False
  loop: "{{ mariadb_global_users + mariadb_extra_users }}"
  loop_control:
    label: "{{ item.name }}"
  community.mysql.mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    host: "{{ item.host | default('%') }}"
    priv: "{{ item.priv | default(omit) }}"
    update_password: "{{ item.update_password | default('always') }}"
    encrypted: "{{ item.encrypted | default(False) }}"
    state: "{{ item.state | default('present') }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags:
    - mariadb

- name: Write backup script
  when: mariadb_backup_enabled
  ansible.builtin.template:
    src: backup.j2
    dest: /usr/local/bin/mariadb-backup
    owner: root
    group: root
    mode: u=rwx,g=rwx,o=
  tags:
    - mariadb

- name: Remove backup script
  when: not mariadb_backup_enabled
  ansible.builtin.file:
    path: /usr/local/bin/mariadb-backup
    state: absent
  tags:
    - mariadb

- name: Create backup cronjobs
  ansible.builtin.cron:
    name: mariadb backup
    special_time: "{{ mariadb_backup_cron }}"
    job: /usr/bin/cronic /usr/local/bin/mariadb-backup
    state: "{{ 'present' if mariadb_backup_enabled else 'absent' }}"
  tags:
    - mariadb

- name: Include exporter tasks
  when: mariadb_exporter_enabled | default(False)
  ansible.builtin.include_tasks: exporter.yml
  tags:
    - mariadb
    - mariadb-exporter

...
